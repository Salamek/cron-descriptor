[build-system]
requires = ["setuptools"]
build-backend = 'setuptools.build_meta'

[project]
name = "cron_descriptor"
license = "MIT"
dynamic = ["version"]
requires-python = ">= 3.11"
description = "A Python library that converts cron expressions into human readable strings."

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [

]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "polib"
]
test = ["pytest"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[[project.authors]]
name = "Adam Schubert"
email = "adam.schubert@sg1-game.net"


[project.urls]
Homepage = "https://github.com/Salamek/cron-descriptor"

[tool.setuptools.dynamic]
version = {attr = "cron_descriptor.__version__"}

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
"cron_descriptor" = ["locale/*.mo"]

[tool.ruff]
line-length = 200
target-version = "py312"

[tool.ruff.lint]
select = [
  "A", "ASYNC", "B", "BLE", "C4", "C90", "DTZ", "E", "EXE", "F",
  "FA", "FBT", "FLY", "ICN", "INT", "ISC", "N", "PGH", "PIE", "PL",
  "PT", "PYI", "RET", "RSE", "RUF", "S", "SIM", "SLF", "T10", "TCH",
  "TD", "TID", "W", "YTT",
  # "ANN", "ARG", "COM", "D", "DJ", "EM", "ERA", "G", "I", "INP",
  # "NPY", "PD", "PTH", "Q", "T20", "TRY", "UP",
]
ignore = ["N999"]  #  Invalid module name GetText instead of get_text

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str"]
max-args = 8
max-branches = 16
max-returns = 10


[tool.ruff.lint.per-file-ignores]
"cron_descriptor/Exception.py" = ["N818", "PIE790"]
"cron_descriptor/ExpressionDescriptor.py" = ["B904", "BLE001", "DTZ011", "PLC1901", "RET505"]
"cron_descriptor/ExpressionParser.py" = ["RET506"]
"setup.py" = ["SIM115"]
"tests/*" = ["PLR0402", "S101"]
"tests/test_locale.py" = ["PIE804"]
"tests/test_import.py" = ["PLC0415"]
"tools/resx2po.py" = ["N817", "S314"]


[tool.mypy]
files = ["cron_descriptor", "tests"]
ignore_missing_imports = true
strict = true


[tool.pytest.ini_options]
# Tell pytest where to look for tests
testpaths = [
    "tests",
]

# Pattern to match test files
python_files = [
    "test_*.py",
]
